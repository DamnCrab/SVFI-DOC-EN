(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{346:function(e,a,t){"use strict";t.r(a);var s=t(7),r=Object(s.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("Warning")]),e._v(" "),a("p",[e._v("The description on this page belongs to advanced content, please read "),a("RouterLink",{attrs:{to:"/pages/052617/"}},[e._v("Advanced Content Detailed Explanation")])],1)]),e._v(" "),a("p",[e._v("SVFI supports using command line interface")]),e._v(" "),a("h2",{attrs:{id:"environment-construction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#environment-construction"}},[e._v("#")]),e._v(" Environment construction")]),e._v(" "),a("ol",[a("li",[e._v("Create a new "),a("code",[e._v("steam_appid.txt")]),e._v(" in the SVFI installation root directory and fill in the following content")])]),e._v(" "),a("blockquote",[a("p",[e._v("1692080")])]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Tip")]),e._v(" "),a("p",[e._v("Filling out this text file will cause SVFI to start in standalone application mode to avoid interference from the Steam client.")]),e._v(" "),a("p",[e._v("Special operations such as multi-opening of software and migration of software installation locations can be realized.")])]),e._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[e._v("Start the command prompt "),a("code",[e._v("cmd")]),e._v(" in the root directory of the SVFI installation (if the installation location is not on the system disk, administrator privileges are not required), enter "),a("code",[e._v("one_line_shot_args.exe -h")]),e._v(" and press Enter, you should be able to see something similar to the following:")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("usage: #### SVFI CLI tool by Jeanna #### [-h] -i INPUT -c CONFIG -t TASK_ID\n                                         [--concat-only] [--extract-only]\n                                         [--render-only] [-p] [--pipe-in]\n                                         [--pipe-out]\n                                         [--pipe-iw PIPE_IN_WIDTH]\n                                         [--pipe-ih PIPE_IN_HEIGHT]\n                                         [--pipe-in-fps PIPE_IN_FPS]\n                                         [--pipe-in-pixfmt {rgb24,rgb48be,rgb48le,rgb48}]\n                                         [--pipe-rgb]\n                                         [--pipe-colormatrix {470bg,170m,2020ncl,709}]\n\nTo enhance Long video/image sequence quality\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nBasic Settings:\n  -i INPUT, --input INPUT\n                        Path of input video/image sequence folder\n  -c CONFIG, --config CONFIG\n                        Path of config\n  -t TASK_ID, --task-id TASK_ID\n                        13-digit Task id\n  --concat-only         Concat Chunk only\n  --extract-only        Extract input to frames Only\n  --render-only         Render only\n  -p, --preview         Preview Settings\n\nPipe Settings:\n  Set the follow parameters when '-mid' is assigned, or you will encounter\n  exceptions.Output Y4M at YUV444P10\n\n  --pipe-in             This enables OLS to obtain input data from stdin\n  --pipe-out            This enables OLS to pipe output to stdout\n  --pipe-iw PIPE_IN_WIDTH\n                        Width of input raw RGB, effective when --pipe-in\n                        appointed\n  --pipe-ih PIPE_IN_HEIGHT\n                        Height of input raw RGB, effective when --pipe-in\n                        appointed\n  --pipe-in-fps PIPE_IN_FPS\n                        Input stream FPS, effective when --pipe-in appointed\n  --pipe-in-pixfmt {rgb24,rgb48be,rgb48le,rgb48}\n                        Pixel format of input raw RGB, effective when --pipe-\n                        in appointed\n  --pipe-rgb            Pipe RGB Raw data to stdout, effective when --pipe-out\n                        appointed\n  --pipe-colormatrix {470bg,170m,2020ncl,709}\n                        Colormatrix for RGB-YUV Conversion, effective when\n                        --pipe-in appointed, --pipe-rgb not appointed\n\n\n")])])]),a("h2",{attrs:{id:"description-of-typical-usage-scenarios"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#description-of-typical-usage-scenarios"}},[e._v("#")]),e._v(" Description of typical usage scenarios")]),e._v(" "),a("h3",{attrs:{id:"open-more-svfi"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#open-more-svfi"}},[e._v("#")]),e._v(" Open more SVFI")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("one_line_shot_args.exe")]),e._v(" (hereinafter referred to as OLS) program supports multiple openings after the above configuration is completed, and is used for multi-process tasks. Please note that this may cause a huge resource occupation.")]),e._v(" "),a("p",[e._v("There are three required parameters that need to be entered:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("--input")]),e._v(": The folder where the video file or image sequence to be processed is located")]),e._v(" "),a("li",[a("code",[e._v("--config")]),e._v(": The configuration file generated by the SVFI GUI program, generally located in the Configs folder of the installation directory")]),e._v(" "),a("li",[a("code",[e._v("--task-id")]),e._v(": task ID, a non-empty string, used to distinguish different tasks.")])]),e._v(" "),a("h3",{attrs:{id:"pipeline-input"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pipeline-input"}},[e._v("#")]),e._v(" Pipeline input")]),e._v(" "),a("p",[e._v("SVFI supports RGB stream input from other processes. Currently, it supports raw stream input in four pixel formats "),a("code",[e._v("rgb24")]),e._v(", "),a("code",[e._v("rgb48")]),e._v(", "),a("code",[e._v("rgb48le")]),e._v(", "),a("code",[e._v("rgb48be")]),e._v(".")]),e._v(" "),a("p",[a("code",[e._v("--pipe-in")]),e._v(" must be filled in to enable this feature, and additionally specify "),a("code",[e._v("--pipe-iw")]),e._v(" input image pixel length, "),a("code",[e._v("--pipe-ih")]),e._v(" width, "),a("code",[e._v("--pipe-in-fps")]),e._v(" input stream frame Rate (float only), the pixel format of "),a("code",[e._v("--pipe-in-pixfmt")]),e._v(" input.")]),e._v(" "),a("h3",{attrs:{id:"pipeline-output"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pipeline-output"}},[e._v("#")]),e._v(" Pipeline output")]),e._v(" "),a("p",[e._v("SVFI supports outputting RGB or Y4M streams of "),a("code",[e._v("YUV444P10")]),e._v(" to "),a("code",[e._v("stdout")]),e._v(".")]),e._v(" "),a("p",[a("code",[e._v("--pipe-out")]),e._v(" must be filled in to enable this feature,")]),e._v(" "),a("ul",[a("li",[e._v("If you need to output "),a("code",[e._v("YUV444P10")]),e._v(", please specify "),a("code",[e._v("--pipe-colormatrix")]),e._v(" for SVFI to convert RGB to YUV stream")]),e._v(" "),a("li",[e._v("If you want to output the "),a("code",[e._v("RGB")]),e._v(" stream, please specify "),a("code",[e._v("--pipe-rgb")]),e._v(", the specific output pixel format is controlled by the options of the configuration file, generally speaking, "),a("code",[e._v("rgb48")]),e._v(" is output when high-precision workflow is enabled, and "),a("code",[e._v("rgb48")]),e._v(" is output for non-high-precision workflow output "),a("code",[e._v("rgb24")])])]),e._v(" "),a("h3",{attrs:{id:"command-line-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#command-line-example"}},[e._v("#")]),e._v(" Command line example")]),e._v(" "),a("h4",{attrs:{id:"use-ffmpeg-for-high-precision-frame-splitting-and-input-svfi-for-processing-use-y4m-input-ffmpeg-for-compression"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-ffmpeg-for-high-precision-frame-splitting-and-input-svfi-for-processing-use-y4m-input-ffmpeg-for-compression"}},[e._v("#")]),e._v(" Use "),a("code",[e._v("ffmpeg")]),e._v(" for high-precision frame splitting and input "),a("code",[e._v("SVFI")]),e._v(" for processing, use "),a("code",[e._v("Y4M")]),e._v(" input "),a("code",[e._v("ffmpeg")]),e._v(" for compression")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("ffmpeg "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-loglevel")]),e._v(" error "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-vsync")]),e._v(" passthrough "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-hwaccel")]),e._v(" auto "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-i")]),e._v(" test/test.mp4 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-map")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(":v:0 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-sws_flags")]),e._v(" +bicubic+full_chroma_int+accurate_rnd "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-vf")]),e._v(" copy,format"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("yuv444p10le,format"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("rgb48be,format"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("rgb24,minterpolate"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("fps"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("24.000")]),e._v(":mi_mode"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("dup "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-f")]),e._v(" image2pipe "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-pix_fmt")]),e._v(" rgb24 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-vcodec")]),e._v(" rawvideo - "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("  one_line_shot_args.exe  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-i")]),e._v(" - "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-c")]),e._v(" Configs/SVFI_Config_pipe_test.ini "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-t")]),e._v(" pipe_2 --pipe-in --pipe-iw "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("960")]),e._v(" --pipe-ih "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("540")]),e._v("  --pipe-in-fps "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("24")]),e._v(" --pipe-out "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("  ffmpeg.exe "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-loglevel")]),e._v(" error "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-hide_banner")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-y")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-vsync")]),e._v(" cfr "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-i")]),e._v(" - "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-preset:v")]),e._v(" slow "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-c:v")]),e._v(" hevc_nvenc "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-pix_fmt")]),e._v(" yuv420p "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-crf")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("16")]),e._v(" test/output.mp4 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-y")]),e._v("\n")])])]),a("h4",{attrs:{id:"use-ffmpeg-for-high-precision-frame-splitting-and-input-the-svfi-pipeline-with-a-length-of-2-for-processing-output-y4m-and-use-ffmpeg-for-compression"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-ffmpeg-for-high-precision-frame-splitting-and-input-the-svfi-pipeline-with-a-length-of-2-for-processing-output-y4m-and-use-ffmpeg-for-compression"}},[e._v("#")]),e._v(" Use "),a("code",[e._v("ffmpeg")]),e._v(" for high-precision frame splitting and input the "),a("code",[e._v("SVFI")]),e._v(" pipeline with a length of 2 for processing, output "),a("code",[e._v("Y4M")]),e._v(" and use "),a("code",[e._v("ffmpeg")]),e._v(" for compression")]),e._v(" "),a("p",[e._v("The first OLS process is used for super resolution, and the second OLS process is used for supplementary frame")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("ffmpeg "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-loglevel")]),e._v(" error "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-vsync")]),e._v(" passthrough "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-hwaccel")]),e._v(" auto "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-i")]),e._v(" test/test.mp4 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-map")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(":v:0 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-sws_flags")]),e._v(" +bicubic+full_chroma_int+accurate_rnd "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-vf")]),e._v(" copy,format"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("yuv444p10le,format"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("rgb48be,format"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("rgb24,minterpolate"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("fps"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("24.000")]),e._v(":mi_mode"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("dup "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-f")]),e._v(" image2pipe "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-pix_fmt")]),e._v(" rgb48be "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-vcodec")]),e._v(" rawvideo - "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" one_line_shot_args.exe  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-i")]),e._v(" - "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-c")]),e._v(" Configs/SVFI_Config_pipe_1.ini "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-t")]),e._v(" pipe_1 --pipe-in --pipe-iw "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("960")]),e._v(" --pipe-ih "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("540")]),e._v(" --pipe-in-fps "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("24")]),e._v(" --pipe-out --pipe-rgb --pipe-in-pixfmt rgb48be "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" one_line_shot_args.exe "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-i")]),e._v(" - "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-c")]),e._v(" Configs/SVFI_Config_pipe_2.ini "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-t")]),e._v(" pipe_2 --pipe-in --pipe-iw "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("960")]),e._v(" --pipe-ih "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("540")]),e._v("  --pipe-in-fps "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("24")]),e._v(" --pipe-in-pixfmt rgb48 --pipe-out "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("  ffmpeg.exe "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-loglevel")]),e._v(" error "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-hide_banner")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-y")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-vsync")]),e._v(" cfr "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-i")]),e._v(" - "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-preset:v")]),e._v(" slow "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-c:v")]),e._v(" hevc_nvenc "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-pix_fmt")]),e._v(" yuv420p "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-crf")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("16")]),e._v(" test/output.mp4 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-y")]),e._v("\n")])])]),a("h4",{attrs:{id:"use-vapoursynth-to-preprocess-the-input-and-then-use-ffmpeg-to-perform-high-precision-frame-splitting-and-svfi-pipeline-processing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-vapoursynth-to-preprocess-the-input-and-then-use-ffmpeg-to-perform-high-precision-frame-splitting-and-svfi-pipeline-processing"}},[e._v("#")]),e._v(" Use "),a("code",[e._v("Vapoursynth")]),e._v(" to preprocess the input and then use "),a("code",[e._v("ffmpeg")]),e._v(" to perform high-precision frame splitting and "),a("code",[e._v("SVFI")]),e._v(" pipeline processing")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("Vapoursynth")]),e._v(" script "),a("code",[e._v("input.vpy")]),e._v(" used:")]),e._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" vapoursynth "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("as")]),e._v(" vs\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" vapoursynth "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" core\nvideo "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("lsmas"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("LWLibavSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("r'test.mp4'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 960x540, 24fps")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# DO SOMETHING")]),e._v("\n\nvideo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("set_output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# output yuv")]),e._v("\n")])])]),a("p",[e._v("Command Line:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("vspipe input.vpy "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--y4m")]),e._v(" - "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" ffmpeg "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-loglevel")]),e._v(" error "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-vsync")]),e._v(" passthrough "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-hwaccel")]),e._v(" auto "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-i")]),e._v(" - "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-map")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(":v:0 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-sws_flags")]),e._v(" +bicubic+full_chroma_int+accurate_rnd "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-vf")]),e._v(" copy,format"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("yuv444p10le,format"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("rgb48be,format"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("rgb24,minterpolate"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("fps"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("24.000")]),e._v(":mi_mode"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("dup "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-f")]),e._v(" image2pipe "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-pix_fmt")]),e._v(" rgb24 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-vcodec")]),e._v(" rawvideo - "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("  one_line_shot_args.exe  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-i")]),e._v(" - "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-c")]),e._v(" Configs/SVFI_Config_pipe_test.ini "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-t")]),e._v(" pipe_2 --pipe-in --pipe-iw "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("960")]),e._v(" --pipe-ih "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("540")]),e._v("  --pipe-in-fps "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("24")]),e._v(" --pipe-out "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("  ffmpeg.exe "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-loglevel")]),e._v(" error "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-hide_banner")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-y")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-vsync")]),e._v(" cfr "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-i")]),e._v(" - "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-preset:v")]),e._v(" slow "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-c:v")]),e._v(" hevc_nvenc "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-pix_fmt")]),e._v(" yuv420p "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-crf")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("16")]),e._v(" test/output.mp4 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-y")]),e._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Tip")]),e._v(" "),a("p",[e._v("After using SVFI to configure task parameters and start the task, use "),a("code",[e._v("Config.ini")]),e._v(" generated under the "),a("code",[e._v("Configs")]),e._v(" folder to perform command line tasks")])])])}),[],!1,null,null,null);a.default=r.exports}}]);